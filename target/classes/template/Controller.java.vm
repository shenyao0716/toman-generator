package ${package}.${moduleName}.controller;

import java.util.Arrays;

import org.apache.shiro.authz.annotation.RequiresPermissions;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.util.CollectionUtils;
import java.util.List;

import java.util.stream.Collectors;

import com.toman.common.annotation.SysLog;
import com.toman.modules.sys.controller.AbstractController;
import com.toman.common.utils.ResponAssertUtils;

import ${package}.${moduleName}.service.${className}Service;
import ${package}.${moduleName}.domain.form.${className}Form;
import ${package}.${moduleName}.domain.query.${className}Query;
import ${package}.${moduleName}.domain.vo.${className}Vo;

import ${mainPath}.common.utils.PageUtils;
import ${mainPath}.common.utils.R;




/**
 * ${comments}
 *
 * @author ${author}
 * @email ${email}
 * @date ${datetime}
 */
@RestController
@RequestMapping("${moduleName}/${pathName}")
public class ${className}Controller extends AbstractController{
    @Autowired
    private ${className}Service ${classname}Service;

    /**
     * 列表
     */
     @SysLog(value = "导航",menuType = "4",menuPrems = "${moduleName}:${pathName}:list")
    @RequestMapping("/list")
 //   @RequiresPermissions("${moduleName}:${pathName}:list")
    public R list(${className}Query query){
        PageUtils page = ${classname}Service.queryPage(query);

        return R.ok().put("page", page);
    }


    /**
     * 信息
     */
   @RequestMapping("/info/{${pk.attrname}}")
 //   @RequiresPermissions("${moduleName}:${pathName}:info")
    public R info(@PathVariable("${pk.attrname}") ${pk.attrType} ${pk.attrname}){
			${className}Vo ${classname} = ${classname}Service.queryVoById(${pk.attrname});
            return R.ok().put("info", ${classname});
    }

    /**
     * 保存
     */
    @SysLog(value = "保存",menuType = "4",menuPrems = "${moduleName}:${pathName}:save")
    @RequestMapping("/save")
    @RequiresPermissions("${moduleName}:${pathName}:save")
    public R save(@RequestBody ${className}Form form){
       ${classname}Service.saveWithForm(form,getUser());
        return R.ok();
    }

    /**
    * 修改
    */
   @SysLog(value = "修改",menuType = "4",menuPrems = "${moduleName}:${pathName}:update")
   @RequestMapping("/update")
   @RequiresPermissions("${moduleName}:${pathName}:update")
   public R update(@RequestBody ${className}Form form){
        ${classname}Service.updateWithForm(form,getUser());
        return R.ok();
    }

    /**
     * 删除
     */
    @SysLog(value = "删除",menuType = "4",menuPrems = "${moduleName}:${pathName}:delete")
    @RequestMapping("/delete")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public R delete(@RequestBody List<${pk.attrType}> ${pk.attrname}s){
        ResponAssertUtils.mustTrue(!CollectionUtils.isEmpty(${pk.attrname}s),"参数错误");
        ${classname}Service.logicDel(${pk.attrname}s,getUser());

        return R.ok();
    }

    /**
     * 删除
     */
    @SysLog(value = "删除",menuType = "4",menuPrems = "${moduleName}:${pathName}:delete")
    @RequestMapping("/delete/{ids}")
    @RequiresPermissions("${moduleName}:${pathName}:delete")
    public R delete(@PathVariable("ids") String ids){
        List<Long> idsList = Arrays.stream(ids.split(",")).map(Long::valueOf).collect(Collectors.toList());
        ResponAssertUtils.mustTrue(!CollectionUtils.isEmpty(idsList),"参数错误");
        ${classname}Service.logicDel(idsList,getUser());

        return R.ok();
    }
}
